DJANGO + POSTGRESQL (CRUD SAMPLE)


-> Start Django project
django-admin startproject DjangoCRUD


---------------------------------------
-> Connect Django project to PostgreSQL
## Python PostgreSQL adapter: psycopg2
pip install psycopg2

## change DjangoCRUD/settings.py DATABASE section
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': BASE_DIR / 'postgresdb',
        'USER': 'postgres',
        'PASSWORD': '123',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}


--------------------------------------------
-> Setup new Django app on DjangoCRUD folder
python manage.py startapp tutorials

## add the created app to INSTALLED_APPS array, in settings.py
item.apps.ItemConfig


-----------------
-> Configure CORS
## install django-cors-headers library
pip install django-cors-headers

## add configuration for CORS to INSTALLED_APPS, in settings.py
corsheaders

## add middleware class to listen in on responses (CorsMiddleware should be placed before any middleware that can generate responses)
corsheaders.middleware.CorsMiddleware
django.middleware.common.CommonMiddleware

## set CORS_ORIGIN_ALLOW_ALL and the host to CORS_ORIGIN_WHITELIST
CORS_ORIGIN_ALLOW_ALL = False
CORS_ORIGIN_WHITELIST = (
    'http://localhost:8081',
)


---------------------------------------------------------------
-> Define the app model as a subclass of django.db.models.model
from django.db import models
class item(models.Model):
    ...


----------------------------------------
-> Migrate models to PostgreSQL database
python manage.py makemigrations
python manage.py migrate 


-------------------------------------------
-> Create a serializer for the model (item)
# put the following code into item/serializers.py
from item.models import Item
from rest_framework import serializers

class ItemSerializer(serializers.ModelSerializer):
    class Meta:
        model = Item
        fields = ('id',
                  'title',
                  'content',
                  'date')


-----------------------------------
-> Define routes to Views functions
# put the following code into item/urls.py
from django.conf.urls import url
from item import views

urlpatterns = [
    url(r'api/item$', views.item_list),
    url(r'api/item/(?P<pk>[0-9]+)$', views.list_detail),
]

# include the following into DjangoCRUD/urls.py
from django.conf.urls import url, include

urlpatterns = [
    url(r'^', include('item.urls'))
]


------------------
-> Write API Views

from django.http.response import JsonResponse
from rest_framework.parsers import JSONParser
from rest_framework import status

from item.models import Item
from item.serializers import ItemSerializer
from rest_framework.decorators import api_view

@api_view(['GET', 'POST', 'DELETE'])
def item_list(req):
...

